



	import java.util.*;
	import java.sql.*;
	import java.io.*;
	

	
	
	public class AlbumDB {

		private Connection myConn;
		
		public AlbumDB() throws Exception {
			
			// get database properties from text file and use to connect to the local MySQL database
			Properties props = new Properties();
			props.load(new FileInputStream("DatabaseConfig"));
			
			String user = props.getProperty("user");
			String password = props.getProperty("password");
			String dburl = props.getProperty("dburl");
			
			// connect to database
			myConn = DriverManager.getConnection(dburl, user, password);
			
			System.out.println("DB connection successful to: " + dburl);
		}
		
		//Create list which reads data from database based on specified query. First to get all data in event no search parameters are specified
		
		public List<Album> getAllAlbums() throws Exception {  //List Album gets data based on the information in the "Album" class
			List<Album> list = new ArrayList<>();
			
			Statement myStmt = null;
			ResultSet myRs = null;
			
			try {
				myStmt = myConn.createStatement();
				myRs = myStmt.executeQuery("select * from Album_Artist"); //SQL Query
				
				while (myRs.next()) {
					Album tempAlbum = convertRowToAlbum(myRs);
					list.add(tempAlbum);
				}

				return list;		
			}
			finally {
				close(myStmt, myRs);
			}
		}
		
		//Second list to define data to be read based on specific search parameters
		public List<Album> searchAlbums(String albumid) throws Exception {
			List<Album> list = new ArrayList<>();

			PreparedStatement myStmt = null;
			ResultSet myRs = null;

			try {
				albumid += "%";
				myStmt = myConn.prepareStatement("select * from Album_Artist where albumid = ?"); //SQL query which returns the songs of a specified album
				
				myStmt.setString(1, albumid);
				
				myRs = myStmt.executeQuery();
				
				while (myRs.next()) {
					Album tempAlbum = convertRowToAlbum(myRs);
					list.add(tempAlbum);
				}
				
				return list;
			}
			finally {
				close(myStmt, myRs);
			}
		}
		
		
		
		
		private Album convertRowToAlbum(ResultSet myRs) throws SQLException {
			
			String idsong = myRs.getString("idsong");
			String rate = myRs.getString("rate");
			String artistid = myRs.getString("artistid");
			String albumid = myRs.getString("albumid");
			
			
			Album tempAlbum = new Album(idsong, rate, artistid, albumid);
			
			return tempAlbum;
		}
		



		private static void close(Connection myConn, Statement myStmt, ResultSet myRs)
				throws SQLException {

			if (myRs != null) {
				myRs.close();
			}

			if (myStmt != null) {
				
			}
			
			if (myConn != null) {
				myConn.close();
			}
		}

		private void close(Statement myStmt, ResultSet myRs) throws SQLException {
			close(null, myStmt, myRs);		
		}

		
		}
	
	
	
	
	


